[tool.poetry]
name = "golem-workers"
version = "0.3.3"
description = "Golem Workers is an API providing direct and high-level access to CPU and GPU resources on the Golem Network."
authors = ["Golem Factory <contact@golem.network>"]
readme = "README.md"
packages = [
    {include = "golem_workers"},
    {include = "golem_reputation"},
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "test-pypi"
url = "https://test.pypi.org/simple/"
priority = "explicit"

[tool.poetry.dependencies]
python = "^3.8.1"

#golem-core = {path = "../golem-core-python", develop = true}
#golem-core = {git = "https://github.com/golemfactory/golem-core-python.git", branch = "approxit/cluster-api"}
golem-core = "^0.7.6"
golem-node = "^0.16.0"

fastapi = "^0.111.0"
pydantic-settings = "^2.3.1"
dpath = "^2.1.6"
websocat = "^1.13.0"
dependency-injector = "^4.41.0"

# reputation
aerich = "^0.7.2"
prettytable = "^3.10.2"
tortoise-orm = "^0.21.5"
appdirs = "^1.4.4"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.8"
ruff = "^0.4.8"
liccheck = "^0.9.2"

pydevd-pycharm = ">=231.8109.197,<231.8110.0"

[tool.poetry.scripts]
golem-reputation = "golem_reputation.entrypoints.cli.main:main"

[tool.poe.tasks]
checks = {sequence = ["checks_codestyle", "checks_license"], help = "Run all available code checks"}
checks_codestyle = {sequence = ["_checks_lint", "_checks_format"], help = "Run only code style checks"}
_checks_lint  = {cmd = "ruff check", help = "Run only code linting checks" }
_checks_format  = {cmd = "ruff format --check", help = "Run only code format checks" }
checks_license = {sequence = ["_checks_license_export", "_checks_license_verify"], help = "Run only license compatibility checks"}
_checks_license_export = "poetry export -f requirements.txt -o .requirements.txt"
_checks_license_verify = "liccheck -r .requirements.txt"

format = {sequence = ["_format_lint", "_format_format"], help = "Run code auto formatting"}
_format_lint = "ruff check --fix"
_format_format = "ruff format"

[tool.ruff]
line-length = 100

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.liccheck]
authorized_licenses = [
    "bsd",
    "new bsd",
    "bsd license",
    "apache 2",
    "apache",
    "Apache Software",
    "Apache Software License",
    "MPL-2.0",
    "Mozilla Public License 2.0 (MPL 2.0)",
    "MIT",
    "MIT License",
    "LGPL",
    "LGPL-3.0-or-later",
    "GNU Lesser General Public License v3 or later (LGPLv3+)",
    "GNU Lesser General Public License v3 (LGPLv3)",
    "Python Software Foundation",
    "ISC",
    "ISC License (ISCL)",
    "The Unlicense (Unlicense)",
]
unauthorized_licenses = [
    "gpl v3"
]

[tool.liccheck.authorized_packages]
websocat = "*"
